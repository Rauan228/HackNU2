в чем проблема при регистрации

register:1 Access to XMLHttpRequest at 'http://localhost:8000/api/auth/register' from origin 'http://localhost:5173' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.Understand this error
api.ts:113  POST http://localhost:8000/api/auth/register net::ERR_FAILED 500 (Internal Server Error)
dispatchXhrRequest @ axios.js?v=f362e374:1683
xhr @ axios.js?v=f362e374:1560
dispatchRequest @ axios.js?v=f362e374:2085
Promise.then
_request @ axios.js?v=f362e374:2288
request @ axios.js?v=f362e374:2197
httpMethod @ axios.js?v=f362e374:2334
wrap @ axios.js?v=f362e374:8
register @ api.ts:113
register @ AuthContext.tsx:80
handleSubmit @ Register.tsx:47
executeDispatch @ react-dom_client.js?v=e4dce0e9:13622
runWithFiberInDEV @ react-dom_client.js?v=e4dce0e9:997
processDispatchQueue @ react-dom_client.js?v=e4dce0e9:13658
(anonymous) @ react-dom_client.js?v=e4dce0e9:14071
batchedUpdates$1 @ react-dom_client.js?v=e4dce0e9:2626
dispatchEventForPluginEventSystem @ react-dom_client.js?v=e4dce0e9:13763
dispatchEvent @ react-dom_client.js?v=e4dce0e9:16784
dispatchDiscreteEvent @ react-dom_client.js?v=e4dce0e9:16765
<form>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=883e3264:247
Register @ Register.tsx:79
react_stack_bottom_frame @ react-dom_client.js?v=e4dce0e9:18509
renderWithHooksAgain @ react-dom_client.js?v=e4dce0e9:5729
renderWithHooks @ react-dom_client.js?v=e4dce0e9:5665
updateFunctionComponent @ react-dom_client.js?v=e4dce0e9:7475
beginWork @ react-dom_client.js?v=e4dce0e9:8525
runWithFiberInDEV @ react-dom_client.js?v=e4dce0e9:997
performUnitOfWork @ react-dom_client.js?v=e4dce0e9:12561
workLoopSync @ react-dom_client.js?v=e4dce0e9:12424
renderRootSync @ react-dom_client.js?v=e4dce0e9:12408
performWorkOnRoot @ react-dom_client.js?v=e4dce0e9:11766
performWorkOnRootViaSchedulerTask @ react-dom_client.js?v=e4dce0e9:13505
performWorkUntilDeadline @ react-dom_client.js?v=e4dce0e9:36
<Register>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=883e3264:247
App @ App.tsx:18
react_stack_bottom_frame @ react-dom_client.js?v=e4dce0e9:18509
renderWithHooksAgain @ react-dom_client.js?v=e4dce0e9:5729
renderWithHooks @ react-dom_client.js?v=e4dce0e9:5665
updateFunctionComponent @ react-dom_client.js?v=e4dce0e9:7475
beginWork @ react-dom_client.js?v=e4dce0e9:8525
runWithFiberInDEV @ react-dom_client.js?v=e4dce0e9:997
performUnitOfWork @ react-dom_client.js?v=e4dce0e9:12561
workLoopSync @ react-dom_client.js?v=e4dce0e9:12424
renderRootSync @ react-dom_client.js?v=e4dce0e9:12408
performWorkOnRoot @ react-dom_client.js?v=e4dce0e9:11766
performWorkOnRootViaSchedulerTask @ react-dom_client.js?v=e4dce0e9:13505
performWorkUntilDeadline @ react-dom_client.js?v=e4dce0e9:36
<App>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=883e3264:247
(anonymous) @ main.tsx:8Understand this error



вот настройки моего сервера и какой бд,
а вот что записано в .env
DATABASE_URL=postgresql+psycopg2://postgres:postgres@localhost:5432/hacknu_job_portal
JWT_SECRET=devsecret
JWT_ALG=HS256
OPENAI_API_KEY=sk-REDACTED




ChatGPT said:
Thought for 12s

Это классическая CORS-ошибка: фронт (http://localhost:5173
) стучится на бэк (http://localhost:8000
), а бэк не добавляет заголовки CORS. Из-за этого браузер блокирует ответ, а в консоли ты видишь ещё и 500 (скорее всего есть вторая ошибка на бэке — БД/валидация), но основная проблема — нет Access-Control-Allow-Origin.

Ниже — быстрый чек-лист и готовые вставки.

1) Включи CORS в FastAPI

В main.py (до include_router) добавь:

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()

ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=ALLOWED_ORIGINS,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# если ты подключаешь роутеры:
# app.include_router(auth_router, prefix="/api/auth", tags=["auth"])
# app.include_router(jobs_router, prefix="/api/jobs", tags=["jobs"])


Важно:

Префикс должен совпадать с фронтом: у тебя запрос идёт на /api/auth/register, значит в FastAPI либо include_router(..., prefix="/api/auth"), либо сам эндпоинт должен быть объявлен как @app.post("/api/auth/register").

2) Проверь, что эндпоинт реально существует

Быстрый тест из терминала:

# Префлайт (OPTIONS), должен вернуть 200 и заголовки Access-Control-Allow-*
curl -i -X OPTIONS http://localhost:8000/api/auth/register \
  -H "Origin: http://localhost:5173" \
  -H "Access-Control-Request-Method: POST"

# Сам POST (без тела он даст 422, но должен вернуть CORS заголовки)
curl -i -X POST http://localhost:8000/api/auth/register \
  -H "Origin: http://localhost:5173" \
  -H "Content-Type: application/json" \
  -d '{"email":"test@example.com","password":"123456","full_name":"Test","user_type":"job_seeker"}'


Если тут нет Access-Control-Allow-Origin, значит middleware не подключили/оригин не совпадает/запрос уходит не на тот порт.

3) Проверь базовые вещи

В .env у тебя ОК:

DATABASE_URL=postgresql+psycopg2://postgres:postgres@localhost:5432/hacknu_job_portal
JWT_SECRET=devsecret
JWT_ALG=HS256
OPENAI_API_KEY=...  # не коммить публично


Убедись, что бэкенд читает .env:

# backend/core/config.py
from pydantic_settings import BaseSettings

class Settings(BaseSettings):
    DATABASE_URL: str
    JWT_SECRET: str
    JWT_ALG: str = "HS256"
    OPENAI_API_KEY: str | None = None

    class Config:
        env_file = ".env"

settings = Settings()


Проверь подключение к БД (лог при старте или явный пинг). Если таблиц нет — импортируй create_tables.sql в pgAdmin.

На фронте проверь axios базовый URL:

// src/api/client.ts
export const api = axios.create({
  baseURL: 'http://localhost:8000', // без /api в конце
  withCredentials: true,            // если используешь cookies
});


И в методе регистрации путь должен быть /api/auth/register.

4) Если 500 остаётся (вторая проблема)

Частые причины:

БД недоступна / неверный DATABASE_URL / отсутствуют таблицы.

Уникальный email — падает IntegrityError при повторной регистрации.

Валидация схемы (Pydantic) — 422.

Хэш пароля — нет зависимости passlib[bcrypt].

Сделай обработчик ошибок, чтобы не получать «голый» 500:

from fastapi import HTTPException
from sqlalchemy.exc import IntegrityError
from starlette.requests import Request
from starlette.responses import JSONResponse

@app.exception_handler(IntegrityError)
async def integrity_handler(request: Request, exc: IntegrityError):
    if "unique constraint" in str(exc).lower():
        return JSONResponse({"detail": "Email already registered"}, status_code=409)
    return JSONResponse({"detail": "Database error"}, status_code=500)


И проверь логи uvicorn — там будет стек-трейс настоящей причины.

5) Минимальный рабочий эндпоинт регистрации (пример)
# backend/api/auth.py
from fastapi import APIRouter, Depends, HTTPException
from pydantic import BaseModel, EmailStr
from sqlalchemy.orm import Session
from ..core.db import get_db
from ..models.users import User
from ..core.security import hash_password

router = APIRouter()

class RegisterIn(BaseModel):
    email: EmailStr
    password: str
    full_name: str
    user_type: str  # 'job_seeker' | 'employer'

@router.post("/register")
def register(data: RegisterIn, db: Session = Depends(get_db)):
    if data.user_type not in ("job_seeker", "employer"):
        raise HTTPException(400, "Invalid user_type")
    exists = db.query(User).filter(User.email == data.email).first()
    if exists:
        raise HTTPException(409, "Email already registered")
    user = User(
        email=data.email,
        hashed_password=hash_password(data.password),
        full_name=data.full_name,
        user_type=data.user_type,
    )
    db.add(user)
    db.commit()
    db.refresh(user)
    return {"id": user.id, "email": user.email}


И в main.py:

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from .api.auth import router as auth_router

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:5173","http://127.0.0.1:5173"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(auth_router, prefix="/api/auth", tags=["auth"])

Коротко

Добавь CORSMiddleware и правильный список allow_origins.

Убедись, что роут /api/auth/register реально существует.

Проверь БД и обработай IntegrityError.

Протести curl/docs — должны появиться заголовки Access-Control-Allow-Origin и 2xx/4xx вместо 500.

Если покажешь лог uvicorn из момента запроса регистрации — скажу точную вторую причину 500.

You said:
вот что в бэке
(Background on this error at: https://sqlalche.me/e/20/e3q8)
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [12912]
WARNING:  WatchFiles detected changes in 'create_database.py'. Reloading...
Process SpawnProcess-4:
Traceback (most recent call last):
  File "C:\Program Files\Python310\lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Program Files\Python310\lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\uvicorn\_subprocess.py", line 73, in subprocess_started
    config.configure_logging()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\uvicorn\config.py", line 393, in configure_logging
    logging.config.dictConfig(self.log_config)
  File "C:\Program Files\Python310\lib\logging\config.py", line 811, in dictConfig
    dictConfigClass(config).configure()
  File "C:\Program Files\Python310\lib\logging\config.py", line 544, in configure
    formatters[name] = self.configure_formatter(
  File "C:\Program Files\Python310\lib\logging\config.py", line 656, in configure_formatter
    result = self.configure_custom(config)
  File "C:\Program Files\Python310\lib\logging\config.py", line 475, in configure_custom
    result = c(**kwargs)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\uvicorn\logging.py", line 43, in __init__
    super().__init__(fmt=fmt, datefmt=datefmt, style=style)
  File "C:\Program Files\Python310\lib\logging\__init__.py", line 589, in __init__
    self._style.validate()
  File "C:\Program Files\Python310\lib\logging\__init__.py", line 428, in validate
    if not self.validation_pattern.search(self._fmt):
KeyboardInterrupt
INFO:     Started server process [21492]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     127.0.0.1:56679 - "OPTIONS /api/auth/register HTTP/1.1" 200 OK
INFO:     127.0.0.1:56679 - "POST /api/auth/register HTTP/1.1" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 716, in checkout
    rec = pool._do_get()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\impl.py", line 167, in _do_get
    return self._create_connection()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 678, in __init__
    self.__connect()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 902, in __connect
    with util.safe_reraise():
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)        
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\psycopg2\__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync) 
psycopg2.OperationalError

The above exception was the direct cause of the following exception:       

Traceback (most recent call last):
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\uvicorn\protocols\http\httptools_impl.py", line 426, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\uvicorn\middleware\proxy_headers.py", line 84, in __call__
    return await self.app(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\fastapi\applications.py", line 1106, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\applications.py", line 122, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\errors.py", line 184, in __call__
    raise exc
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\cors.py", line 91, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\cors.py", line 146, in simple_response
    await self.app(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\exceptions.py", line 79, in __call__
    raise exc
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\fastapi\middleware\asyncexitstack.py", line 20, in __call__
    raise e
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\fastapi\middleware\asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\routing.py", line 66, in app
    response = await func(request)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\fastapi\routing.py", line 274, in app
    raw_response = await run_endpoint_function(
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\fastapi\routing.py", line 193, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\starlette\concurrency.py", line 41, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\anyio\to_thread.py", line 33, in run_sync
    return await get_asynclib().run_sync_in_worker_thread(
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\anyio\_backends\_asyncio.py", line 877, in run_sync_in_worker_thread
    return await future
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\anyio\_backends\_asyncio.py", line 807, in run
    result = context.run(func, *args)
  File "D:\HackNUSmartBot\backend\api\auth.py", line 16, in register       
    existing_user = db.query(User).filter(User.email == user_data.email).first()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(    
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\session.py", line 2180, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\session.py", line 2047, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\orm\session.py", line 1143, in _connection_for_bind
    conn = bind.connect()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 3268, in connect
    return self._connection_cls(self)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 2430, in _handle_dbapi_exception_noconnection  
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 716, in checkout
    rec = pool._do_get()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\impl.py", line 167, in _do_get
    return self._create_connection()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 678, in __init__
    self.__connect()
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 902, in __connect
    with util.safe_reraise():
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\pool\base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)        
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\sqlalchemy\engine\default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "C:\Users\Рауан\AppData\Roaming\Python\Python310\site-packages\psycopg2\__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync) 
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError)
(Background on this error at: https://sqlalche.me/e/20/e3q8)
ChatGPT said:
Thought for 24s

CORS ты уже починил (OPTIONS 200). Теперь падает сам бэкенд на подключении к БД:

sqlalchemy.exc.OperationalError: (psycopg2.OperationalError)


Это означает: FastAPI не может открыть соединение по DATABASE_URL. Причины типичные: не тот порт/хост, неправильный пароль, «не тот» инстанс Postgres, или драйвер/URL не совпадают с режимом (sync/async).

У тебя установлены две версии PostgreSQL (17 и 18). Очень часто разные версии слушают разные порты. Если твой DATABASE_URL указывает на 5432, а активный кластер слушает 5433 — будет ровно такой OperationalError.

Что сделать по шагам (быстро)

Проверь порт у активного сервера (18):

В pgAdmin → правый клик по “PostgreSQL 18” → Properties → Connection → Port.

Или в SQL:

SHOW port;


Проверь, что ты заходишь в ту же БД этими же реквизитами:

psql -h 127.0.0.1 -p <ТВОЙ_ПОРТ> -U postgres -d hacknu_job_portal


Если psql не коннектится — проблема точно в порте/пароле/пользователе.

Обнови DATABASE_URL на явный IP и правильный порт
(на Windows иногда localhost резолвится странно; и чтобы не попасть в 17-й сервер по старому порту):

DATABASE_URL=postgresql+psycopg2://postgres:<ТВОЙ_ПАРОЛЬ>@127.0.0.1:<ТВОЙ_ПОРТ>/hacknu_job_portal


Например, если у тебя реально работает 18-й на 5432 — оставь 5432. Если вдруг 18-й слушает 5433 — поменяй на 5433.

Перезапусти бэкенд (он читает .env при старте):

uvicorn backend.main:app --reload


Убедись, что таблицы есть (ты их создавал через pgAdmin):
users, jobs, resumes, job_applications, ai_chat_sessions, ai_chat_messages.
Если их нет — выполни свой create_tables.sql в hacknu_job_portal.

Доп. проверки и подсказки

Синхронный vs асинхронный драйвер:
У тебя psycopg2 → это sync. Значит:

URL должен быть postgresql+psycopg2://...

Сессия SQLAlchemy — обычная Session, а не AsyncSession.

Если ты вдруг используешь postgresql+asyncpg:// и psycopg2 — будет ошибка.

Логируй настоящую причину: Добавь один «пинг» к БД при старте, чтобы увидеть конкретное сообщение (пароль неверен/нет хоста и т.п.)

# core/db.py (после создания engine)
try:
    with engine.connect() as conn:
        conn.execute(text("SELECT 1"))
    print("DB OK")
except Exception as e:
    import traceback; traceback.print_exc()


Windows/Firewall: если сам psql коннектится — дело не в фаерволе.

Пароль: убеждайся, что пароль в .env тот же, что в pgAdmin.

Минимальный эталон db.py (sync)
# backend/core/db.py
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from sqlalchemy.sql import text
from .config import settings  # читает .env

engine = create_engine(
    settings.DATABASE_URL,
    pool_pre_ping=True,  # убирает висячие коннекты
)

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# тест на старте (можно оставить)
def ping_db():
    with engine.connect() as conn:
        conn.execute(text("SELECT 1"))


И вызови ping_db() в main.py при старте приложения (в startup ивенте).

Почему у тебя OPTIONS 200, а POST 500?

CORS middleware настроен правильно — предзапрос (OPTIONS) проходит.

А вот на самом POST FastAPI впервые идёт в БД (проверка email) — и падает на коннекте.

Резюме

Исправь DATABASE_URL: IP 127.0.0.1 и точный порт активного сервера (PostgreSQL 18).

Проверь подключение psql той же строкой.

Перезапусти бэкенд, посмотри лог.

Если отправишь строку SHOW port; и вывод psql-команды (успех/ошибка) — я укажу конкретное место, что ещё поправить.

ChatGPT can make mistakes. OpenAI