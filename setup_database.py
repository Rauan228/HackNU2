#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL –¥–ª—è HackNU SmartBot
"""

import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import os
from pathlib import Path

def create_database():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PostgreSQL (–∫ –±–∞–∑–µ postgres –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        conn = psycopg2.connect(
            host="localhost",
            port="5432",
            user="postgres",
            password="password",  # –ò–∑–º–µ–Ω–∏–ª –ø–∞—Ä–æ–ª—å
            database="postgres"
        )
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT 1 FROM pg_database WHERE datname='jobboard'")
        exists = cursor.fetchone()
        
        if not exists:
            print("–°–æ–∑–¥–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 'jobboard'...")
            cursor.execute("CREATE DATABASE jobboard")
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'jobboard' —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'jobboard' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
        cursor.close()
        conn.close()
        
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
        print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres")
        print("   - –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –≤ —Å–∫—Ä–∏–ø—Ç–µ setup_database.py")
        return False
    
    return True

def run_sql_script(script_path):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL —Å–∫—Ä–∏–ø—Ç"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(
            host="localhost",
            port="5432",
            user="postgres",
            password="password",  # –ò–∑–º–µ–Ω–∏–ª –ø–∞—Ä–æ–ª—å
            database="jobboard"
        )
        cursor = conn.cursor()
        
        # –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç
        with open(script_path, 'r', encoding='utf-8') as file:
            sql_script = file.read()
            
        cursor.execute(sql_script)
        conn.commit()
        
        cursor.close()
        conn.close()
        
        print(f"‚úÖ SQL —Å–∫—Ä–∏–ø—Ç {script_path} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL —Å–∫—Ä–∏–ø—Ç–∞ {script_path}: {e}")
        return False
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {script_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è HackNU SmartBot...")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not create_database():
        return
    
    # –ü—É—Ç—å –∫ SQL —Å–∫—Ä–∏–ø—Ç–∞–º
    backend_dir = Path(__file__).parent / "backend"
    sql_dir = backend_dir / "sql"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    create_tables_script = sql_dir / "create_tables.sql"
    if create_tables_script.exists():
        print("–°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—ã...")
        if not run_sql_script(create_tables_script):
            return
    else:
        print(f"‚ùå –§–∞–π–ª {create_tables_script} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    seed_script = sql_dir / "insert_seed.sql"
    if seed_script.exists():
        print("–î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        if not run_sql_script(seed_script):
            return
    else:
        print("‚ö†Ô∏è –§–∞–π–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é...")
    
    print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && python -m uvicorn main:app --reload")

if __name__ == "__main__":
    main()