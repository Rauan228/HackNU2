import sqlite3
import os

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db_path = 'hacknu_smartbot.db'
if os.path.exists(db_path):
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    # –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º SQL-—Å–∏–¥–µ—Ä
    with open('sql/realistic_jobs_seed.sql', 'r', encoding='utf-8') as f:
        sql_content = f.read()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã
    cursor.executescript(sql_content)
    conn.commit()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
    cursor.execute('SELECT COUNT(*) FROM jobs')
    total_jobs = cursor.fetchone()[0]
    
    cursor.execute('SELECT COUNT(*) FROM users WHERE user_type = "employer"')
    total_employers = cursor.fetchone()[0]
    
    print('‚úÖ –°–∏–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!')
    print(f'üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –≤ –ë–î: {total_jobs}')
    print(f'üë• –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π: {total_employers}')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    cursor.execute('SELECT title, company_name, location FROM jobs WHERE title LIKE "%—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫%" OR title LIKE "%DevOps%" OR title LIKE "%Data%" LIMIT 5')
    it_jobs = cursor.fetchall()
    print('\nüíª –ò–¢ –≤–∞–∫–∞–Ω—Å–∏–∏:')
    for job in it_jobs:
        print(f'  - {job[0]} –≤ {job[1]} ({job[2]})')
    
    cursor.execute('SELECT title, company_name, location FROM jobs WHERE title LIKE "%–ö–æ–Ω—Ç–µ–Ω—Ç%" OR title LIKE "%–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫%" OR title LIKE "%HR%" OR title LIKE "%–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç%" OR title LIKE "%–ü—Å–∏—Ö–æ–ª–æ–≥%" LIMIT 5')
    humanities_jobs = cursor.fetchall()
    print('\nüìö –ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:')
    for job in humanities_jobs:
        print(f'  - {job[0]} –≤ {job[1]} ({job[2]})')
    
    cursor.execute('SELECT title, company_name, location FROM jobs WHERE title LIKE "%—é—Ä–∏—Å—Ç%" OR title LIKE "%–Æ—Ä–∏—Å—Ç%" LIMIT 5')
    legal_jobs = cursor.fetchall()
    print('\n‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:')
    for job in legal_jobs:
        print(f'  - {job[0]} –≤ {job[1]} ({job[2]})')
    
    conn.close()
else:
    print('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –ë–î —Å–æ–∑–¥–∞–Ω–∞.')